apiVersion: apps/v1
kind: Deployment
metadata:
  name: coder
  labels:
    app: coder
  annotations:
    kubesail.com/template: matifali/coder:v67
    kubesailEditorUid: 908d11c6-a488-4b3e-b76f-13e4512b8509
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: coder
  ServiceAccountName: coder
  template:
    metadata:
      labels:
        app: coder
    spec:
      containers:
        - name: coder
          image: ghcr.io/coder/coder:v0.20.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          env:
            - name: CODER_ACCESS_URL
              value: https://coder.{{ CLUSTER_ADDRESS }}
            - name: CODER_HTTP_ADDRESS
              value: "0.0.0.0:3000"
          resources: {}
          volumeMounts:
            - name: coder-data
              mountPath: /home/coder/
      volumes:
        - name: coder-data
          persistentVolumeClaim:
            claimName: coder-data
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coder
  labels:
    app: coder
  annotations:
    kubesailEditorUid: 9ca37c5a-586c-4004-a836-f013b9358bfc
    cert-manager.io/cluster-issuer: letsencrypt
    kubernetes.io/tls-acme: "true"
    kubesail.com/template: matifali/coder:v67
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
spec:
  tls:
    - hosts:
        - coder.{{ CLUSTER_ADDRESS }}
    - hosts:
        - coder.{{ LOCAL_CLUSTER_ADDRESS }}
  rules:
    - host: coder.{{ CLUSTER_ADDRESS }}
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: coder
                port:
                  name: http
    - host: coder.{{ LOCAL_CLUSTER_ADDRESS }}
      http:
        paths:
          - pathType: ImplementationSpecific
            backend:
              service:
                name: coder
                port:
                  name: http
---
apiVersion: v1
kind: Service
metadata:
  name: coder
  labels:
    app: coder
  annotations:
    kubesailEditorUid: d2ad21aa-de51-40e0-abac-299f8f603641
    kubesail.com/template: matifali/coder:v67
spec:
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app: coder
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: coder-data
  annotations:
    kubesailEditorUid: 02205648-1737-4c2c-a663-8ea51ab1b028
    kubesail.com/template: matifali/coder:v67
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: coder
  annotations:
    kubesailEditorUid: 02205648-1737-4c2c-a663-8ea51ab1b028
    kubesail.com/template: matifali/coder:v67
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: coder
  annotations:
    kubesailEditorUid: 02205648-1737-4c2c-a663-8ea51ab1b028
    kubesail.com/template: matifali/coder:v67
rules:
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "*" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: coder
  annotations:
    kubesailEditorUid: 02205648-1737-4c2c-a663-8ea51ab1b028
    kubesail.com/template: matifali/coder:v67
subjects:
  - kind: ServiceAccount
    name: coder
roleRef:
  kind: Role
  name: coder
  apiGroup: rbac.authorization.k8s.io
